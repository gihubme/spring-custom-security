# =====================================PostgreSQL
#container_name: jwt-db  service:appdb << POSTGRES_SERVICE from docker-compose
POSTGRES_SERVICE=localhost
spring.datasource.url=jdbc:postgresql://${POSTGRES_SERVICE}:5432/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
#=====================================
spring.jpa.show-sql=true
spring.jpa.hibernate.hbm2ddl.delimiter=";"
spring.jpa.properties.hibernate.format_sql=true
# =====================================
# jpa.database-platform and dialect
# =====================================
# #spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect
# for plain hibernate
hibernate.schema_update.unique_constraint_strategy=RECREATE_QUIETLY
# for spring data
spring.jpa.properties.hibernate.schema_update.unique_constraint_strategy=RECREATE_QUIETLY

spring.jpa.open-in-view=false
# https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot
# if true LazyInitializationException is prevented but will cause a lot of db-connections
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false

# Disable feature detection by this undocumented parameter.
# Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.use-new-id-generator-mappings=true
#spring.datasource.generate-unique-name=false
# =====================================
# logging
# =====================================
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
# =====================================
# environment variables
# =====================================
spring.jpa.generate-ddl=${DDL}
# validate | update | ------ | create-drop | none
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=${DDLAUTO}
#==================================
spring.flyway.enabled=${FLYWAY}
#==================================
app.security=${SECURITY}
app.activeDb=${ACTIVE_DB}
app.setupdata=true
#==================================
# jwt options
#==================================
jwt.secret = ${SECRET}
jwt.loggedOutJwtTokenCacheLimit=1000
#1day >> 24*60*60*1000
jwt.emailValidationExpirationMs=86400000
#2hr>>2*60*60*1000
jwt.passwordForgetExpirationMs=7200000
jwt.emailUpdateExpirationMs=7200000
jwt.issuer.devadmin=app nnn4eu
jwt.issuer.anycompany=any company
#600000ms=10min >>> 14400000ms=240min >>> 10min * 24 = 4hr
#jwt.expirationMs= 600000
#jwt.refreshExpirationMs= 14400000
#**********************************
#For test >> 60000ms=1min >>> 120000ms=2min
jwt.expirationMs=60000
jwt.refreshExpirationMs=120000
#==================================
# mail
#==================================
#https://www.wpoven.com/tools/free-smtp-server-for-testing
spring.mail.debug=true
spring.mail.host=smtp.freesmtpservers.com
spring.mail.port=25
spring.mail.username=mergerequestde@gmail.com
spring.mail.properties.mail.smtp.auth=false
spring.mail.protocol=smtp

#spring.mail.host=smtp-relay.sendinblue.com
#spring.mail.port=587
#spring.mail.username=nikakar@gmail.com
#spring.mail.password=Wc01wQy3EKVfBrTM
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.ssl.trust=smtp-relay.sendinblue.com
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000
#==================================
server.port=${PORT}
server.host=${HOST}
#server.servlet.context-path=/api


